                        {/*<ImageLinkForm*/}
                        {/*    onInputChange={this.onInputChange}*/}
                        {/*    onButtonSubmit={this.onButtonSubmit}*/}
                        {/*/>*/}
                        {/*<FaceRecognition box={box} imageUrl={imageUrl} />*/}



                          "redux": "^4.0.5",
                          "redux-logger": "^3.0.6",
                          "redux-thunk": "^2.3.0",



    calculateFaceLocation = (data) => {
        const clarifaiFace = data.outputs[0].data.regions[0].region_info.bounding_box;
        const image = document.getElementById('inputimage');
        const width = Number(image.width);
        const height = Number(image.height);
        return {
            leftCol: clarifaiFace.left_col * width,
            topRow: clarifaiFace.top_row * height,
            rightCol: width - (clarifaiFace.right_col * width),
            bottomRow: height - (clarifaiFace.bottom_row * height)
        }
    }

    displayFaceBox = (box) => {
        this.setState({box: box});
    }

    onButtonSubmit = () => {
            this.setState({imageUrl: this.state.input});
            fetch('34.216.100.238:3001/imageurl', {
                method: 'post',
                headers: {'Content-Type': 'application/json'},
                body: JSON.stringify({
                    input: this.state.input
                })
            })
                .then(response => response.json())
                .then(response => {
                    if (response) {
                        fetch('34.216.100.238:3001/image', {
                            method: 'put',
                            headers: {'Content-Type': 'application/json'},
                            body: JSON.stringify({
                                id: this.state.user.id
                            })
                        })
                            .then(response => response.json())
                            .then(count => {
                                this.setState(Object.assign(this.state.user, { entries: count}))
                            })
                            .catch(console.log)

                    }
                    this.displayFaceBox(this.calculateFaceLocation(response))
                })
                .catch(err => console.log(err));
        }